2022-05-31 12:14:36,699 | root |  DEBUG: Current configuration: {'training': True, '_parameters': OrderedDict(), '_buffers': OrderedDict(), '_non_persistent_buffers_set': set(), '_backward_hooks': OrderedDict(), '_is_full_backward_hook': None, '_forward_hooks': OrderedDict(), '_forward_pre_hooks': OrderedDict(), '_state_dict_hooks': OrderedDict(), '_load_state_dict_pre_hooks': OrderedDict(), '_modules': OrderedDict([('u_layer', ModuleList(
  (0): ModuleList(
    (0): Linear(in_features=3, out_features=100, bias=True)
    (1): Linear(in_features=100, out_features=100, bias=True)
    (2): Linear(in_features=100, out_features=100, bias=True)
    (3): Linear(in_features=100, out_features=2, bias=True)
  )
)), ('u_bn_layer', ModuleList(
  (0): ModuleList(
    (0): BatchNorm1d(3, eps=0.5, momentum=0.1, affine=False, track_running_stats=True)
    (1): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)), ('p_layer', ModuleList(
  (0): ModuleList(
    (0): Linear(in_features=2, out_features=100, bias=True)
    (1): Linear(in_features=100, out_features=100, bias=True)
    (2): Linear(in_features=100, out_features=100, bias=True)
    (3): Linear(in_features=100, out_features=1, bias=True)
  )
)), ('p_bn_layer', ModuleList(
  (0): ModuleList(
    (0): BatchNorm1d(2, eps=0.5, momentum=0.1, affine=False, track_running_stats=True)
    (1): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)), ('loss', MSELoss()), ('activation', Tanh())]), 'problem_name': 'taylor_green_2d', 'f_fun': <function f_example at 0x7fbd548469d0>, 'phi_fun': <function phi_example at 0x7fbd49053550>, 'phi0': 0, 'conditional_probability_to_survive': <function Net.<lambda> at 0x7fbd548451f0>, 'is_x_inside': <function Net.<lambda> at 0x7fbd54845280>, 'deriv_map': array([[1, 0],
       [0, 1],
       [0, 0],
       [0, 0],
       [1, 0],
       [0, 1],
       [1, 0],
       [0, 1]]), 'n': 8, 'dim_in': 2, 'zeta_map': array([-1, -1,  0,  1,  0,  0,  1,  1]), 'deriv_condition_deriv_map': array([[1, 0],
       [0, 1]]), 'deriv_condition_zeta_map': array([0, 1]), 'dim_out': 2, 'nprime': 2, 'exact_p_fun': None, 'train_for_p': True, 'patches': 1, 'code': array([[-1, -1],
       [-1, -1]]), 'coordinate': array([0, 1]), 'fdb_lookup': {(1, 0): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 1), l_and_k={(1, 0): [0, 0, 0, 0, 0, 0, 0, 1]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 1, 0), l_and_k={(1, 0): [0, 0, 0, 0, 0, 0, 1, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 1, 0, 0), l_and_k={(1, 0): [0, 0, 0, 0, 0, 1, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 1, 0, 0, 0), l_and_k={(1, 0): [0, 0, 0, 0, 1, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 1, 0, 0, 0, 0), l_and_k={(1, 0): [0, 0, 0, 1, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 1, 0, 0, 0, 0, 0), l_and_k={(1, 0): [0, 0, 1, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 1, 0, 0, 0, 0, 0, 0), l_and_k={(1, 0): [0, 1, 0, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(1, 0, 0, 0, 0, 0, 0, 0), l_and_k={(1, 0): [1, 0, 0, 0, 0, 0, 0, 0]})], (0, 1): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 1), l_and_k={(0, 1): [0, 0, 0, 0, 0, 0, 0, 1]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 1, 0), l_and_k={(0, 1): [0, 0, 0, 0, 0, 0, 1, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 1, 0, 0), l_and_k={(0, 1): [0, 0, 0, 0, 0, 1, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 1, 0, 0, 0), l_and_k={(0, 1): [0, 0, 0, 0, 1, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 1, 0, 0, 0, 0), l_and_k={(0, 1): [0, 0, 0, 1, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 1, 0, 0, 0, 0, 0), l_and_k={(0, 1): [0, 0, 1, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 1, 0, 0, 0, 0, 0, 0), l_and_k={(0, 1): [0, 1, 0, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(1, 0, 0, 0, 0, 0, 0, 0), l_and_k={(0, 1): [1, 0, 0, 0, 0, 0, 0, 0]})], (0, 0): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 0), l_and_k={})]}, 'fdb_runtime': 0.02147984504699707, 'mechanism_tot_len': 178, 'lr': 0.01, 'lr_milestones': [1000, 2000], 'lr_gamma': 0.1, 'weight_decay': 0, 'save_for_best_model': False, 'save_data': False, 'batch_normalization': True, 'nb_states': 100000, 'nb_states_per_batch': 1000, 'nb_path_per_state': 1000, 'x_lo': 0, 'x_hi': 6.283185307179586, 'adjusted_x_boundaries': (-0.6283185307179586, 6.911503837897545), 't_lo': 0.0, 't_hi': 0.25, 'T': 0.25, 'tau_lo': 1e-05, 'tau_hi': 100, 'nu': 2, 'delta_t': 0.25, 'outlier_percentile': 1, 'outlier_multiplier': 10, 'exponential_lambda': 0.2051731775502023, 'epochs': 10000, 'antithetic': True, 'device': device(type='cuda'), 'verbose': True, 'fix_all_dim_except_first': False, 'fix_t_dim': False, 't_boundaries': tensor([0.2500, 0.0000], device='cuda:0'), 'adjusted_t_boundaries': [(tensor(0., device='cuda:0'), tensor(0.2500, device='cuda:0'))], 'working_dir': 'logs/20220531-121436-taylor_green_2d-T0.25-nu2'}
2022-05-31 12:14:36,986 | root |  DEBUG: Generated 1 out of 100000 batches with 0.2858119010925293 seconds.
2022-05-31 12:14:41,297 | root |  DEBUG: Generated 1001 out of 100000 batches with 4.311280965805054 seconds.
2022-05-31 12:14:45,496 | root |  DEBUG: Generated 2001 out of 100000 batches with 4.198697566986084 seconds.
2022-05-31 12:14:49,781 | root |  DEBUG: Generated 3001 out of 100000 batches with 4.28516697883606 seconds.
2022-05-31 12:14:53,999 | root |  DEBUG: Generated 4001 out of 100000 batches with 4.217195272445679 seconds.
2022-05-31 12:14:58,222 | root |  DEBUG: Generated 5001 out of 100000 batches with 4.2235212326049805 seconds.
2022-05-31 12:15:02,439 | root |  DEBUG: Generated 6001 out of 100000 batches with 4.216691017150879 seconds.
2022-05-31 12:15:06,652 | root |  DEBUG: Generated 7001 out of 100000 batches with 4.212498664855957 seconds.
2022-05-31 12:15:10,874 | root |  DEBUG: Generated 8001 out of 100000 batches with 4.2216105461120605 seconds.
2022-05-31 12:15:15,191 | root |  DEBUG: Generated 9001 out of 100000 batches with 4.316746473312378 seconds.
2022-05-31 12:15:19,748 | root |  DEBUG: Generated 10001 out of 100000 batches with 4.556865453720093 seconds.
2022-05-31 12:15:24,262 | root |  DEBUG: Generated 11001 out of 100000 batches with 4.513719797134399 seconds.
2022-05-31 12:15:28,993 | root |  DEBUG: Generated 12001 out of 100000 batches with 4.730576276779175 seconds.
2022-05-31 12:15:33,299 | root |  DEBUG: Generated 13001 out of 100000 batches with 4.30618143081665 seconds.
2022-05-31 12:15:37,858 | root |  DEBUG: Generated 14001 out of 100000 batches with 4.557876110076904 seconds.
2022-05-31 12:15:42,288 | root |  DEBUG: Generated 15001 out of 100000 batches with 4.430817365646362 seconds.
2022-05-31 12:15:46,784 | root |  DEBUG: Generated 16001 out of 100000 batches with 4.495637893676758 seconds.
2022-05-31 12:15:51,273 | root |  DEBUG: Generated 17001 out of 100000 batches with 4.4886314868927 seconds.
2022-05-31 12:15:55,759 | root |  DEBUG: Generated 18001 out of 100000 batches with 4.485698461532593 seconds.
2022-05-31 12:16:00,255 | root |  DEBUG: Generated 19001 out of 100000 batches with 4.495235443115234 seconds.
2022-05-31 12:16:04,745 | root |  DEBUG: Generated 20001 out of 100000 batches with 4.489526033401489 seconds.
2022-05-31 12:16:09,183 | root |  DEBUG: Generated 21001 out of 100000 batches with 4.438308477401733 seconds.
2022-05-31 12:16:13,378 | root |  DEBUG: Generated 22001 out of 100000 batches with 4.19461727142334 seconds.
2022-05-31 12:16:17,578 | root |  DEBUG: Generated 23001 out of 100000 batches with 4.1997339725494385 seconds.
2022-05-31 12:16:21,800 | root |  DEBUG: Generated 24001 out of 100000 batches with 4.221488952636719 seconds.
2022-05-31 12:16:26,007 | root |  DEBUG: Generated 25001 out of 100000 batches with 4.207108974456787 seconds.
2022-05-31 12:16:30,247 | root |  DEBUG: Generated 26001 out of 100000 batches with 4.2392494678497314 seconds.
2022-05-31 12:16:34,754 | root |  DEBUG: Generated 27001 out of 100000 batches with 4.507217884063721 seconds.
2022-05-31 12:16:39,243 | root |  DEBUG: Generated 28001 out of 100000 batches with 4.489140748977661 seconds.
2022-05-31 12:16:43,826 | root |  DEBUG: Generated 29001 out of 100000 batches with 4.582320213317871 seconds.
2022-05-31 12:16:48,346 | root |  DEBUG: Generated 30001 out of 100000 batches with 4.520371198654175 seconds.
2022-05-31 12:16:52,846 | root |  DEBUG: Generated 31001 out of 100000 batches with 4.499798774719238 seconds.
2022-05-31 12:16:57,437 | root |  DEBUG: Generated 32001 out of 100000 batches with 4.590658187866211 seconds.
2022-05-31 12:17:01,823 | root |  DEBUG: Generated 33001 out of 100000 batches with 4.3858113288879395 seconds.
2022-05-31 12:17:06,024 | root |  DEBUG: Generated 34001 out of 100000 batches with 4.200429201126099 seconds.
2022-05-31 12:17:10,217 | root |  DEBUG: Generated 35001 out of 100000 batches with 4.1928870677948 seconds.
2022-05-31 12:17:14,557 | root |  DEBUG: Generated 36001 out of 100000 batches with 4.338946580886841 seconds.
2022-05-31 12:17:18,786 | root |  DEBUG: Generated 37001 out of 100000 batches with 4.227071046829224 seconds.
2022-05-31 12:17:23,094 | root |  DEBUG: Generated 38001 out of 100000 batches with 4.307292222976685 seconds.
2022-05-31 12:17:27,336 | root |  DEBUG: Generated 39001 out of 100000 batches with 4.242602586746216 seconds.
2022-05-31 12:17:31,618 | root |  DEBUG: Generated 40001 out of 100000 batches with 4.2812254428863525 seconds.
2022-05-31 12:17:35,918 | root |  DEBUG: Generated 41001 out of 100000 batches with 4.300435304641724 seconds.
2022-05-31 12:17:40,188 | root |  DEBUG: Generated 42001 out of 100000 batches with 4.26943564414978 seconds.
2022-05-31 12:17:44,442 | root |  DEBUG: Generated 43001 out of 100000 batches with 4.253466844558716 seconds.
2022-05-31 12:17:48,849 | root |  DEBUG: Generated 44001 out of 100000 batches with 4.406803131103516 seconds.
2022-05-31 12:17:53,171 | root |  DEBUG: Generated 45001 out of 100000 batches with 4.322231769561768 seconds.
2022-05-31 12:17:57,474 | root |  DEBUG: Generated 46001 out of 100000 batches with 4.302294731140137 seconds.
2022-05-31 12:18:01,754 | root |  DEBUG: Generated 47001 out of 100000 batches with 4.2798755168914795 seconds.
2022-05-31 12:18:06,027 | root |  DEBUG: Generated 48001 out of 100000 batches with 4.273272514343262 seconds.
2022-05-31 12:18:10,320 | root |  DEBUG: Generated 49001 out of 100000 batches with 4.292508363723755 seconds.
2022-05-31 12:18:14,653 | root |  DEBUG: Generated 50001 out of 100000 batches with 4.333376169204712 seconds.
2022-05-31 12:18:19,148 | root |  DEBUG: Generated 51001 out of 100000 batches with 4.4944891929626465 seconds.
2022-05-31 12:18:23,646 | root |  DEBUG: Generated 52001 out of 100000 batches with 4.49762225151062 seconds.
2022-05-31 12:18:28,147 | root |  DEBUG: Generated 53001 out of 100000 batches with 4.500729322433472 seconds.
2022-05-31 12:18:32,650 | root |  DEBUG: Generated 54001 out of 100000 batches with 4.503268718719482 seconds.
2022-05-31 12:18:37,169 | root |  DEBUG: Generated 55001 out of 100000 batches with 4.51889705657959 seconds.
2022-05-31 12:18:41,666 | root |  DEBUG: Generated 56001 out of 100000 batches with 4.496723175048828 seconds.
2022-05-31 12:18:46,064 | root |  DEBUG: Generated 57001 out of 100000 batches with 4.397174835205078 seconds.
2022-05-31 12:18:50,476 | root |  DEBUG: Generated 58001 out of 100000 batches with 4.412196397781372 seconds.
2022-05-31 12:18:54,998 | root |  DEBUG: Generated 59001 out of 100000 batches with 4.521469354629517 seconds.
2022-05-31 12:18:59,514 | root |  DEBUG: Generated 60001 out of 100000 batches with 4.5159828662872314 seconds.
2022-05-31 12:19:04,147 | root |  DEBUG: Generated 61001 out of 100000 batches with 4.632864236831665 seconds.
2022-05-31 12:19:08,665 | root |  DEBUG: Generated 62001 out of 100000 batches with 4.517334461212158 seconds.
2022-05-31 12:19:13,174 | root |  DEBUG: Generated 63001 out of 100000 batches with 4.5097339153289795 seconds.
2022-05-31 12:19:17,690 | root |  DEBUG: Generated 64001 out of 100000 batches with 4.514923095703125 seconds.
2022-05-31 12:19:22,194 | root |  DEBUG: Generated 65001 out of 100000 batches with 4.504204034805298 seconds.
2022-05-31 12:19:26,714 | root |  DEBUG: Generated 66001 out of 100000 batches with 4.51922082901001 seconds.
2022-05-31 12:19:31,202 | root |  DEBUG: Generated 67001 out of 100000 batches with 4.487901449203491 seconds.
2022-05-31 12:19:35,696 | root |  DEBUG: Generated 68001 out of 100000 batches with 4.49297022819519 seconds.
2022-05-31 12:19:39,995 | root |  DEBUG: Generated 69001 out of 100000 batches with 4.298101425170898 seconds.
2022-05-31 12:19:44,179 | root |  DEBUG: Generated 70001 out of 100000 batches with 4.183891296386719 seconds.
2022-05-31 12:19:48,384 | root |  DEBUG: Generated 71001 out of 100000 batches with 4.203194856643677 seconds.
2022-05-31 12:19:52,575 | root |  DEBUG: Generated 72001 out of 100000 batches with 4.190290212631226 seconds.
2022-05-31 12:19:56,799 | root |  DEBUG: Generated 73001 out of 100000 batches with 4.223479986190796 seconds.
2022-05-31 12:20:01,013 | root |  DEBUG: Generated 74001 out of 100000 batches with 4.2125349044799805 seconds.
2022-05-31 12:20:05,291 | root |  DEBUG: Generated 75001 out of 100000 batches with 4.277973413467407 seconds.
2022-05-31 12:20:09,509 | root |  DEBUG: Generated 76001 out of 100000 batches with 4.2177722454071045 seconds.
2022-05-31 12:20:13,710 | root |  DEBUG: Generated 77001 out of 100000 batches with 4.201329946517944 seconds.
2022-05-31 12:20:17,913 | root |  DEBUG: Generated 78001 out of 100000 batches with 4.201933145523071 seconds.
2022-05-31 12:20:22,119 | root |  DEBUG: Generated 79001 out of 100000 batches with 4.206068992614746 seconds.
2022-05-31 12:20:26,316 | root |  DEBUG: Generated 80001 out of 100000 batches with 4.196824312210083 seconds.
2022-05-31 12:20:30,599 | root |  DEBUG: Generated 81001 out of 100000 batches with 4.282880544662476 seconds.
2022-05-31 12:20:34,803 | root |  DEBUG: Generated 82001 out of 100000 batches with 4.203596830368042 seconds.
2022-05-31 12:20:39,042 | root |  DEBUG: Generated 83001 out of 100000 batches with 4.2392497062683105 seconds.
2022-05-31 12:20:43,252 | root |  DEBUG: Generated 84001 out of 100000 batches with 4.210054159164429 seconds.
2022-05-31 12:20:47,560 | root |  DEBUG: Generated 85001 out of 100000 batches with 4.307607889175415 seconds.
2022-05-31 12:20:52,000 | root |  DEBUG: Generated 86001 out of 100000 batches with 4.440096378326416 seconds.
2022-05-31 12:20:56,505 | root |  DEBUG: Generated 87001 out of 100000 batches with 4.5048346519470215 seconds.
2022-05-31 12:21:01,005 | root |  DEBUG: Generated 88001 out of 100000 batches with 4.499542951583862 seconds.
2022-05-31 12:21:05,482 | root |  DEBUG: Generated 89001 out of 100000 batches with 4.476346731185913 seconds.
2022-05-31 12:21:09,946 | root |  DEBUG: Generated 90001 out of 100000 batches with 4.463656425476074 seconds.
2022-05-31 12:21:14,447 | root |  DEBUG: Generated 91001 out of 100000 batches with 4.5009377002716064 seconds.
2022-05-31 12:21:18,950 | root |  DEBUG: Generated 92001 out of 100000 batches with 4.503215789794922 seconds.
2022-05-31 12:21:23,467 | root |  DEBUG: Generated 93001 out of 100000 batches with 4.51628851890564 seconds.
2022-05-31 12:21:27,991 | root |  DEBUG: Generated 94001 out of 100000 batches with 4.5234739780426025 seconds.
2022-05-31 12:21:32,495 | root |  DEBUG: Generated 95001 out of 100000 batches with 4.504261255264282 seconds.
2022-05-31 12:21:36,979 | root |  DEBUG: Generated 96001 out of 100000 batches with 4.483748912811279 seconds.
2022-05-31 12:21:41,648 | root |  DEBUG: Generated 97001 out of 100000 batches with 4.668885231018066 seconds.
2022-05-31 12:21:46,267 | root |  DEBUG: Generated 98001 out of 100000 batches with 4.6185688972473145 seconds.
2022-05-31 12:21:51,019 | root |  DEBUG: Generated 99001 out of 100000 batches with 4.751634120941162 seconds.
2022-05-31 12:21:56,038 | root |  DEBUG: Generated 100000 out of 100000 batches with 5.018678426742554 seconds.
2022-05-31 12:21:56,504 | root |  INFO: Patch 0: generation of p samples take 439.80433797836304 seconds.
2022-05-31 12:21:57,059 | root |  INFO: Patch  0: epoch    0 with loss 3.08E+00
2022-05-31 12:22:32,061 | root |  INFO: Patch  0: epoch  500 with loss 2.76E-02
2022-05-31 12:23:07,127 | root |  INFO: Patch  0: epoch 1000 with loss 8.47E-03
2022-05-31 12:23:42,176 | root |  INFO: Patch  0: epoch 1500 with loss 3.32E-03
2022-05-31 12:24:17,192 | root |  INFO: Patch  0: epoch 2000 with loss 2.01E-03
2022-05-31 12:24:53,374 | root |  INFO: Patch  0: epoch 2500 with loss 1.19E-02
2022-05-31 12:25:29,390 | root |  INFO: Patch  0: epoch 3000 with loss 1.16E-02
2022-05-31 12:26:05,402 | root |  INFO: Patch  0: epoch 3500 with loss 1.23E-02
2022-05-31 12:26:41,340 | root |  INFO: Patch  0: epoch 4000 with loss 7.16E-03
2022-05-31 12:27:17,270 | root |  INFO: Patch  0: epoch 4500 with loss 4.43E-03
2022-05-31 12:27:53,236 | root |  INFO: Patch  0: epoch 5000 with loss 4.31E-03
2022-05-31 12:28:29,205 | root |  INFO: Patch  0: epoch 5500 with loss 4.55E-03
2022-05-31 12:29:05,127 | root |  INFO: Patch  0: epoch 6000 with loss 4.50E-03
2022-05-31 12:29:41,072 | root |  INFO: Patch  0: epoch 6500 with loss 3.80E-03
2022-05-31 12:30:16,984 | root |  INFO: Patch  0: epoch 7000 with loss 4.18E-03
2022-05-31 12:30:52,890 | root |  INFO: Patch  0: epoch 7500 with loss 3.65E-03
2022-05-31 12:31:28,797 | root |  INFO: Patch  0: epoch 8000 with loss 3.16E-03
2022-05-31 12:32:04,767 | root |  INFO: Patch  0: epoch 8500 with loss 3.48E-03
2022-05-31 12:32:40,670 | root |  INFO: Patch  0: epoch 9000 with loss 2.93E-03
2022-05-31 12:33:16,779 | root |  INFO: Patch  0: epoch 9500 with loss 3.12E-03
2022-05-31 12:33:52,690 | root |  INFO: Patch  0: epoch 9999 with loss 3.45E-03
2022-05-31 12:33:52,702 | root |  INFO: Patch0: pre-training of p with 10000 epochs takes  716 seconds.
2022-05-31 12:49:01,503 | root |  INFO: Patch 0: generation of u samples take 908.8004024028778 seconds.
2022-05-31 12:49:01,539 | root |  INFO: Patch  0: epoch    0 with loss 2.29E+07
2022-05-31 12:49:17,231 | root |  INFO: Patch  0: epoch  500 with loss 2.29E+07
2022-05-31 12:49:32,930 | root |  INFO: Patch  0: epoch 1000 with loss 2.29E+07
2022-05-31 12:49:48,669 | root |  INFO: Patch  0: epoch 1500 with loss 2.29E+07
2022-05-31 12:50:04,392 | root |  INFO: Patch  0: epoch 2000 with loss 2.29E+07
2022-05-31 12:50:20,336 | root |  INFO: Patch  0: epoch 2500 with loss 2.29E+07
2022-05-31 12:50:36,284 | root |  INFO: Patch  0: epoch 3000 with loss 2.29E+07
2022-05-31 12:50:52,236 | root |  INFO: Patch  0: epoch 3500 with loss 2.29E+07
2022-05-31 12:51:08,195 | root |  INFO: Patch  0: epoch 4000 with loss 2.29E+07
2022-05-31 12:51:24,155 | root |  INFO: Patch  0: epoch 4500 with loss 2.29E+07
2022-05-31 12:51:40,169 | root |  INFO: Patch  0: epoch 5000 with loss 2.29E+07
2022-05-31 12:51:56,149 | root |  INFO: Patch  0: epoch 5500 with loss 2.29E+07
2022-05-31 12:52:12,118 | root |  INFO: Patch  0: epoch 6000 with loss 2.29E+07
2022-05-31 12:52:28,640 | root |  INFO: Patch  0: epoch 6500 with loss 2.29E+07
2022-05-31 12:52:46,825 | root |  INFO: Patch  0: epoch 7000 with loss 2.29E+07
2022-05-31 12:53:04,797 | root |  INFO: Patch  0: epoch 7500 with loss 2.29E+07
2022-05-31 12:53:21,147 | root |  INFO: Patch  0: epoch 8000 with loss 2.29E+07
2022-05-31 12:53:37,378 | root |  INFO: Patch  0: epoch 8500 with loss 2.29E+07
2022-05-31 12:53:53,785 | root |  INFO: Patch  0: epoch 9000 with loss 2.29E+07
2022-05-31 12:54:09,788 | root |  INFO: Patch  0: epoch 9500 with loss 2.29E+07
2022-05-31 12:54:25,757 | root |  INFO: Patch  0: epoch 9999 with loss 2.29E+07
2022-05-31 12:54:25,769 | root |  INFO: Patch 0: training of u with 10000 epochs take 324.2655785083771 seconds.
2022-05-31 12:54:25,818 | root |  INFO: The error as in Lejay is calculated as follows.
2022-05-31 12:54:25,820 | root |  INFO: $\hat{e}_0(t_k)$
2022-05-31 12:54:25,826 | root |  INFO: & 3.74E+04 & 3.53E+04 & 2.23E+04 & 1.74E+04 & 1.47E+04 & 1.14E+04 & 9.46E+03 & 9.36E+03 & 1.14E+04 & 1.21E+04 & --- \\
2022-05-31 12:54:25,827 | root |  INFO: $\hat{e}_1(t_k)$
2022-05-31 12:54:25,829 | root |  INFO: & 2.94E+03 & 2.72E+03 & 2.41E+03 & 1.77E+03 & 1.49E+03 & 1.41E+03 & 1.37E+03 & 1.23E+03 & 1.00E+03 & 1.07E+03 & --- \\
2022-05-31 12:54:25,829 | root |  INFO: $\hat{e}(t_k)$
2022-05-31 12:54:25,832 | root |  INFO: & 3.75E+04 & 3.53E+04 & 2.34E+04 & 1.77E+04 & 1.47E+04 & 1.14E+04 & 9.97E+03 & 9.54E+03 & 1.15E+04 & 1.23E+04 & --- \\
2022-05-31 12:54:25,832 | root |  INFO: \hline
2022-05-31 12:54:25,833 | root |  INFO: 
The relative L2 error of u (erru) is calculated as follows.
2022-05-31 12:54:25,835 | root |  INFO: erru($t_k$)
2022-05-31 12:54:25,837 | root |  INFO: & 2.47E+02 & 2.11E+02 & 1.66E+02 & 1.26E+02 & 9.81E+01 & 8.33E+01 & 7.49E+01 & 7.02E+01 & 6.86E+01 & 6.89E+01 & --- \\
2022-05-31 12:54:25,960 | root |  INFO: 
The relative L2 error of gradient of u (errgu) is calculated as follows.
2022-05-31 12:54:25,962 | root |  INFO: errgu($t_k$)
2022-05-31 12:54:25,993 | root |  INFO: & 1.36E+02 & 1.24E+02 & 1.06E+02 & 9.42E+01 & 9.10E+01 & 9.48E+01 & 9.15E+01 & 8.27E+01 & 7.56E+01 & 7.06E+01 & --- \\
2022-05-31 12:54:25,993 | root |  INFO: 
The absolute divergence of u (errdivu) is calculated as follows.
2022-05-31 12:54:25,994 | root |  INFO: errdivu($t_k$)
2022-05-31 12:54:25,997 | root |  INFO: & 1.82E+02 & 1.74E+02 & 1.64E+02 & 1.66E+02 & 1.67E+02 & 1.69E+02 & 1.73E+02 & 1.75E+02 & 1.76E+02 & 1.76E+02 & --- \\
2022-05-31 12:54:26,006 | root |  INFO: 
The relative L2 error of p (errp) is calculated as follows.
2022-05-31 12:54:26,008 | root |  INFO: errp($t_k$)
2022-05-31 12:54:26,009 | root |  INFO: & --- & --- & --- & --- & --- & --- & --- & --- & --- & --- & 1.95E-01 \\
2022-05-31 12:54:26,093 | matplotlib.pyplot |  DEBUG: Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-05-31 12:54:26,095 | matplotlib.pyplot |  DEBUG: Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,105 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,106 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2022-05-31 12:54:26,107 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,107 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,107 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,107 | matplotlib.font_manager |  DEBUG: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2022-05-31 12:54:26,152 | matplotlib.font_manager |  DEBUG: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-05-31 12:54:26,152 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,153 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2022-05-31 12:54:26,154 | matplotlib.font_manager |  DEBUG: findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/nguwijy/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
