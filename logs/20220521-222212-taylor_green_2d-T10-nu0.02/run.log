2022-05-21 22:22:12,965 | root |  DEBUG: Current configuration: {'training': False, '_parameters': OrderedDict(), '_buffers': OrderedDict(), '_non_persistent_buffers_set': set(), '_backward_hooks': OrderedDict(), '_is_full_backward_hook': None, '_forward_hooks': OrderedDict(), '_forward_pre_hooks': OrderedDict(), '_state_dict_hooks': OrderedDict(), '_load_state_dict_pre_hooks': OrderedDict(), '_modules': OrderedDict([('u_layer', ModuleList(
  (0): ModuleList(
    (0): Linear(in_features=3, out_features=100, bias=True)
    (1): Linear(in_features=100, out_features=100, bias=True)
    (2): Linear(in_features=100, out_features=100, bias=True)
    (3): Linear(in_features=100, out_features=2, bias=True)
  )
)), ('u_bn_layer', ModuleList(
  (0): ModuleList(
    (0): BatchNorm1d(3, eps=0.5, momentum=0.1, affine=False, track_running_stats=True)
    (1): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)), ('p_layer', ModuleList(
  (0): ModuleList(
    (0): Linear(in_features=2, out_features=100, bias=True)
    (1): Linear(in_features=100, out_features=100, bias=True)
    (2): Linear(in_features=100, out_features=100, bias=True)
    (3): Linear(in_features=100, out_features=1, bias=True)
  )
)), ('p_bn_layer', ModuleList(
  (0): ModuleList(
    (0): BatchNorm1d(2, eps=0.5, momentum=0.1, affine=False, track_running_stats=True)
    (1): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)), ('loss', MSELoss()), ('activation', Tanh())]), 'problem_name': 'taylor_green_2d', 'f_fun': <function f_example at 0x7f75b4c0bca0>, 'phi_fun': <function phi_example at 0x7f75b4c0be50>, 'phi0': 0, 'conditional_probability_to_survive': <function Net.<lambda> at 0x7f75c0377550>, 'is_x_inside': <function Net.<lambda> at 0x7f75c03775e0>, 'deriv_map': array([[1, 0],
       [0, 1],
       [0, 0],
       [0, 0],
       [1, 0],
       [0, 1],
       [1, 0],
       [0, 1]]), 'n': 8, 'dim_in': 2, 'zeta_map': array([-1, -1,  0,  1,  0,  0,  1,  1]), 'deriv_condition_deriv_map': array([[1, 0],
       [0, 1]]), 'deriv_condition_zeta_map': array([0, 1]), 'dim_out': 2, 'nprime': 2, 'train_for_p': False, 'patches': 1, 'code': array([[-1, -1],
       [-1, -1]]), 'coordinate': array([0, 1]), 'fdb_lookup': {(1, 0): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 1), l_and_k={(1, 0): [0, 0, 0, 0, 0, 0, 0, 1]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 1, 0), l_and_k={(1, 0): [0, 0, 0, 0, 0, 0, 1, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 1, 0, 0), l_and_k={(1, 0): [0, 0, 0, 0, 0, 1, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 1, 0, 0, 0), l_and_k={(1, 0): [0, 0, 0, 0, 1, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 1, 0, 0, 0, 0), l_and_k={(1, 0): [0, 0, 0, 1, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 1, 0, 0, 0, 0, 0), l_and_k={(1, 0): [0, 0, 1, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 1, 0, 0, 0, 0, 0, 0), l_and_k={(1, 0): [0, 1, 0, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(1, 0, 0, 0, 0, 0, 0, 0), l_and_k={(1, 0): [1, 0, 0, 0, 0, 0, 0, 0]})], (0, 1): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 1), l_and_k={(0, 1): [0, 0, 0, 0, 0, 0, 0, 1]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 1, 0), l_and_k={(0, 1): [0, 0, 0, 0, 0, 0, 1, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 1, 0, 0), l_and_k={(0, 1): [0, 0, 0, 0, 0, 1, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 1, 0, 0, 0), l_and_k={(0, 1): [0, 0, 0, 0, 1, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 1, 0, 0, 0, 0), l_and_k={(0, 1): [0, 0, 0, 1, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 1, 0, 0, 0, 0, 0), l_and_k={(0, 1): [0, 0, 1, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 1, 0, 0, 0, 0, 0, 0), l_and_k={(0, 1): [0, 1, 0, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(1, 0, 0, 0, 0, 0, 0, 0), l_and_k={(0, 1): [1, 0, 0, 0, 0, 0, 0, 0]})], (0, 0): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 0), l_and_k={})]}, 'fdb_runtime': 0.02304387092590332, 'mechanism_tot_len': 178, 'lr': 0.01, 'lr_milestones': [1000, 2000], 'lr_gamma': 0.1, 'weight_decay': 0, 'save_for_best_model': False, 'save_data': False, 'batch_normalization': True, 'nb_states': 100000, 'nb_states_per_batch': 1000, 'nb_path_per_state': 1000, 'x_lo': 0, 'x_hi': 6.283185307179586, 'adjusted_x_boundaries': (-0.6283185307179586, 6.911503837897545), 't_lo': 0.0, 't_hi': 10, 'T': 10, 'tau_lo': 1e-05, 'tau_hi': 10, 'nu': 0.02, 'delta_t': 10.0, 'outlier_percentile': 1, 'outlier_multiplier': 10, 'exponential_lambda': 0.005129329438755058, 'epochs': 10000, 'antithetic': True, 'device': device(type='cuda'), 'verbose': True, 'fix_all_dim_except_first': False, 'fix_t_dim': False, 't_boundaries': tensor([10.,  0.], device='cuda:0'), 'adjusted_t_boundaries': [(tensor(0., device='cuda:0'), tensor(10., device='cuda:0'))], 'working_dir': 'logs/20220521-222212-taylor_green_2d-T10-nu0.02'}
2022-05-21 22:37:44,672 | root |  INFO: Patch 0: generation of u samples take 931.7045423984528 seconds.
2022-05-21 22:37:44,755 | root |  INFO: Patch  0: epoch    0 with loss 2.45E-01
2022-05-21 22:38:00,358 | root |  INFO: Patch  0: epoch  500 with loss 3.40E-04
2022-05-21 22:38:16,029 | root |  INFO: Patch  0: epoch 1000 with loss 2.53E-04
2022-05-21 22:38:31,677 | root |  INFO: Patch  0: epoch 1500 with loss 1.72E-04
2022-05-21 22:38:47,330 | root |  INFO: Patch  0: epoch 2000 with loss 2.26E-04
2022-05-21 22:39:03,256 | root |  INFO: Patch  0: epoch 2500 with loss 1.84E-04
2022-05-21 22:39:19,184 | root |  INFO: Patch  0: epoch 3000 with loss 1.76E-04
2022-05-21 22:39:35,119 | root |  INFO: Patch  0: epoch 3500 with loss 1.61E-04
2022-05-21 22:39:51,069 | root |  INFO: Patch  0: epoch 4000 with loss 1.43E-04
2022-05-21 22:40:07,069 | root |  INFO: Patch  0: epoch 4500 with loss 1.29E-04
2022-05-21 22:40:23,035 | root |  INFO: Patch  0: epoch 5000 with loss 1.25E-04
2022-05-21 22:40:38,989 | root |  INFO: Patch  0: epoch 5500 with loss 1.08E-04
2022-05-21 22:40:54,950 | root |  INFO: Patch  0: epoch 6000 with loss 9.93E-05
2022-05-21 22:41:10,901 | root |  INFO: Patch  0: epoch 6500 with loss 9.27E-05
2022-05-21 22:41:26,859 | root |  INFO: Patch  0: epoch 7000 with loss 8.52E-05
2022-05-21 22:41:42,818 | root |  INFO: Patch  0: epoch 7500 with loss 8.13E-05
2022-05-21 22:41:58,780 | root |  INFO: Patch  0: epoch 8000 with loss 7.37E-05
2022-05-21 22:42:14,786 | root |  INFO: Patch  0: epoch 8500 with loss 6.92E-05
2022-05-21 22:42:30,763 | root |  INFO: Patch  0: epoch 9000 with loss 7.13E-05
2022-05-21 22:42:46,729 | root |  INFO: Patch  0: epoch 9500 with loss 6.58E-05
2022-05-21 22:43:02,662 | root |  INFO: Patch  0: epoch 9999 with loss 6.95E-05
2022-05-21 22:43:02,674 | root |  INFO: Patch 0: training of u with 10000 epochs take 318.001433134079 seconds.
2022-05-21 22:43:02,720 | root |  INFO: The error as in Lejay is calculated as follows.
2022-05-21 22:43:02,722 | root |  INFO: $\hat{e}_0(t_k)$
2022-05-21 22:43:02,728 | root |  INFO: & 1.78E-02 & 1.43E-02 & 1.20E-02 & 1.11E-02 & 9.90E-03 & 8.66E-03 & 7.91E-03 & 7.53E-03 & 8.47E-03 & 9.23E-03 & --- \\
2022-05-21 22:43:02,729 | root |  INFO: $\hat{e}_1(t_k)$
2022-05-21 22:43:02,731 | root |  INFO: & 7.46E-03 & 5.05E-03 & 4.43E-03 & 4.02E-03 & 3.42E-03 & 2.77E-03 & 2.22E-03 & 2.23E-03 & 2.63E-03 & 2.60E-03 & --- \\
2022-05-21 22:43:02,732 | root |  INFO: $\hat{e}(t_k)$
2022-05-21 22:43:02,734 | root |  INFO: & 1.80E-02 & 1.47E-02 & 1.24E-02 & 1.11E-02 & 9.96E-03 & 8.88E-03 & 8.15E-03 & 7.83E-03 & 8.83E-03 & 9.72E-03 & --- \\
2022-05-21 22:43:02,735 | root |  INFO: \hline
2022-05-21 22:43:02,735 | root |  INFO: 
The relative L2 error of u (erru) is calculated as follows.
2022-05-21 22:43:02,737 | root |  INFO: erru($t_k$)
2022-05-21 22:43:02,739 | root |  INFO: & 1.42E-01 & 1.31E-01 & 1.18E-01 & 1.06E-01 & 9.79E-02 & 9.19E-02 & 8.68E-02 & 8.15E-02 & 7.74E-02 & 7.70E-02 & --- \\
2022-05-21 22:43:02,817 | root |  INFO: 
The relative L2 error of gradient of u (errgu) is calculated as follows.
2022-05-21 22:43:02,819 | root |  INFO: errgu($t_k$)
2022-05-21 22:43:02,863 | root |  INFO: & 4.64E-02 & 4.25E-02 & 4.08E-02 & 3.94E-02 & 3.82E-02 & 3.73E-02 & 3.66E-02 & 3.56E-02 & 3.44E-02 & 3.63E-02 & --- \\
2022-05-21 22:43:02,864 | root |  INFO: 
The absolute divergence of u (errdivu) is calculated as follows.
2022-05-21 22:43:02,865 | root |  INFO: errdivu($t_k$)
2022-05-21 22:43:02,867 | root |  INFO: & 3.16E-02 & 2.54E-02 & 2.37E-02 & 2.11E-02 & 2.18E-02 & 2.40E-02 & 2.52E-02 & 2.50E-02 & 2.44E-02 & 2.50E-02 & --- \\
2022-05-21 22:43:02,877 | root |  INFO: 
The relative L2 error of p (errp) is calculated as follows.
2022-05-21 22:43:02,880 | root |  INFO: errp($t_k$)
2022-05-21 22:43:02,881 | root |  INFO: & --- & --- & --- & --- & --- & --- & --- & --- & --- & --- & 1.84E-02 \\
