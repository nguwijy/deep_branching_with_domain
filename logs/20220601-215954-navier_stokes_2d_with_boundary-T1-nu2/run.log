2022-06-01 21:59:54,334 | root |  INFO: Logs are saved in /home/nguwijy/repo/deep_branching_with_domain/logs/20220601-215954-navier_stokes_2d_with_boundary-T1-nu2
2022-06-01 21:59:54,338 | root |  DEBUG: Current configuration: {'training': False, '_parameters': OrderedDict(), '_buffers': OrderedDict(), '_non_persistent_buffers_set': set(), '_backward_hooks': OrderedDict(), '_is_full_backward_hook': None, '_forward_hooks': OrderedDict(), '_forward_pre_hooks': OrderedDict(), '_state_dict_hooks': OrderedDict(), '_load_state_dict_pre_hooks': OrderedDict(), '_modules': OrderedDict([('u_layer', ModuleList(
  (0): ModuleList(
    (0): Linear(in_features=3, out_features=50, bias=True)
    (1): Linear(in_features=50, out_features=50, bias=True)
    (2): Linear(in_features=50, out_features=50, bias=True)
    (3): Linear(in_features=50, out_features=50, bias=True)
    (4): Linear(in_features=50, out_features=50, bias=True)
    (5): Linear(in_features=50, out_features=50, bias=True)
    (6): Linear(in_features=50, out_features=50, bias=True)
    (7): Linear(in_features=50, out_features=2, bias=True)
  )
)), ('u_bn_layer', ModuleList(
  (0): ModuleList(
    (0): BatchNorm1d(3, eps=0.5, momentum=0.1, affine=False, track_running_stats=True)
    (1): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (7): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)), ('p_layer', ModuleList(
  (0): ModuleList(
    (0): Linear(in_features=2, out_features=50, bias=True)
    (1): Linear(in_features=50, out_features=50, bias=True)
    (2): Linear(in_features=50, out_features=50, bias=True)
    (3): Linear(in_features=50, out_features=50, bias=True)
    (4): Linear(in_features=50, out_features=50, bias=True)
    (5): Linear(in_features=50, out_features=50, bias=True)
    (6): Linear(in_features=50, out_features=50, bias=True)
    (7): Linear(in_features=50, out_features=1, bias=True)
  )
)), ('p_bn_layer', ModuleList(
  (0): ModuleList(
    (0): BatchNorm1d(2, eps=0.5, momentum=0.1, affine=False, track_running_stats=True)
    (1): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (7): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)), ('loss', MSELoss()), ('activation', Softplus(beta=1, threshold=20))]), 'problem_name': 'navier_stokes_2d_with_boundary', 'f_fun': <function f_example at 0x7f2b19064310>, 'phi_fun': <function phi_example at 0x7f2b190643a0>, 'phi0': 0, 'conditional_probability_to_survive': functools.partial(<function conditional_probability_to_survive at 0x7f2b19041c10>, lower_bound=(-100, -1), upper_bound=(100, 1)), 'is_x_inside': functools.partial(<function is_x_inside at 0x7f2b19041ca0>, lower_bound=(-100, -1), upper_bound=(100, 1)), 'conditional_probability_to_survive_for_p': <function Net.<lambda> at 0x7f2b1903bb80>, 'is_x_inside_for_p': <function Net.<lambda> at 0x7f2b1903bca0>, 'deriv_map': array([[1, 0],
       [0, 1],
       [0, 0],
       [0, 0],
       [1, 0],
       [0, 1],
       [1, 0],
       [0, 1]]), 'n': 8, 'dim_in': 2, 'zeta_map': array([-1, -1,  0,  1,  0,  0,  1,  1]), 'deriv_condition_deriv_map': array([[1, 0],
       [0, 1]]), 'deriv_condition_zeta_map': array([0, 1]), 'dim_out': 2, 'nprime': 2, 'exact_p_fun': None, 'train_for_p': False, 'train_for_u': True, 'patches': 1, 'code': array([[-1, -1],
       [-1, -1]]), 'coordinate': array([0, 1]), 'fdb_lookup': {(1, 0): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 1), l_and_k={(1, 0): [0, 0, 0, 0, 0, 0, 0, 1]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 1, 0), l_and_k={(1, 0): [0, 0, 0, 0, 0, 0, 1, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 1, 0, 0), l_and_k={(1, 0): [0, 0, 0, 0, 0, 1, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 1, 0, 0, 0), l_and_k={(1, 0): [0, 0, 0, 0, 1, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 1, 0, 0, 0, 0), l_and_k={(1, 0): [0, 0, 0, 1, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 1, 0, 0, 0, 0, 0), l_and_k={(1, 0): [0, 0, 1, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 1, 0, 0, 0, 0, 0, 0), l_and_k={(1, 0): [0, 1, 0, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(1, 0, 0, 0, 0, 0, 0, 0), l_and_k={(1, 0): [1, 0, 0, 0, 0, 0, 0, 0]})], (0, 1): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 1), l_and_k={(0, 1): [0, 0, 0, 0, 0, 0, 0, 1]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 1, 0), l_and_k={(0, 1): [0, 0, 0, 0, 0, 0, 1, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 1, 0, 0), l_and_k={(0, 1): [0, 0, 0, 0, 0, 1, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 1, 0, 0, 0), l_and_k={(0, 1): [0, 0, 0, 0, 1, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 1, 0, 0, 0, 0), l_and_k={(0, 1): [0, 0, 0, 1, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 1, 0, 0, 0, 0, 0), l_and_k={(0, 1): [0, 0, 1, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 1, 0, 0, 0, 0, 0, 0), l_and_k={(0, 1): [0, 1, 0, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(1, 0, 0, 0, 0, 0, 0, 0), l_and_k={(0, 1): [1, 0, 0, 0, 0, 0, 0, 0]})], (0, 0): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 0), l_and_k={})]}, 'fdb_runtime': 0.0237576961517334, 'mechanism_tot_len': 178, 'lr': 0.001, 'lr_milestones': [1000, 2000], 'lr_gamma': 0.8, 'weight_decay': 0, 'save_for_best_model': True, 'save_data': False, 'batch_normalization': True, 'nb_states': 10000, 'nb_states_per_batch': 1000, 'nb_path_per_state': 1000, 'x_lo': -1, 'x_hi': 1, 'adjusted_x_boundaries': (-1.0, 1.0), 'overtrain_rate_for_p': 0.5, 't_lo': 0.0, 't_hi': 1, 'T': 1, 'tau_lo': 1e-05, 'tau_hi': 10, 'nu': 2, 'delta_t': 1.0, 'outlier_percentile': 1, 'outlier_multiplier': 10, 'exponential_lambda': 0.05129329438755058, 'epochs': 10000, 'antithetic': True, 'div_condition_coeff': 1.0, 'poisson_coeff': 1.0, 'device': device(type='cuda'), 'verbose': True, 'fix_all_dim_except_first': False, 'fix_t_dim': True, 't_boundaries': tensor([1., 0.], device='cuda:0'), 'adjusted_t_boundaries': [(tensor(0., device='cuda:0'), tensor(0., device='cuda:0'))], 'working_dir': 'logs/20220601-215954-navier_stokes_2d_with_boundary-T1-nu2'}
2022-06-01 22:07:07,599 | root |  INFO: Patch 0: generation of u samples take 433.2606854438782 seconds.
2022-06-01 22:07:07,625 | root |  INFO: Patch  0: epoch    0 with loss 6.99E+00
2022-06-01 22:07:19,259 | root |  INFO: Patch  0: epoch  500 with loss 1.19E-04
2022-06-01 22:07:31,004 | root |  INFO: Patch  0: epoch 1000 with loss 7.24E-04
2022-06-01 22:07:42,878 | root |  INFO: Patch  0: epoch 1500 with loss 4.45E-04
2022-06-01 22:07:54,492 | root |  INFO: Patch  0: epoch 2000 with loss 6.39E-03
2022-06-01 22:08:08,610 | root |  INFO: Patch  0: epoch 2500 with loss 1.16E-04
2022-06-01 22:08:20,237 | root |  INFO: Patch  0: epoch 3000 with loss 1.04E-03
2022-06-01 22:08:31,772 | root |  INFO: Patch  0: epoch 3500 with loss 6.39E-04
2022-06-01 22:08:43,290 | root |  INFO: Patch  0: epoch 4000 with loss 1.90E-04
2022-06-01 22:08:54,795 | root |  INFO: Patch  0: epoch 4500 with loss 3.00E-04
2022-06-01 22:09:06,306 | root |  INFO: Patch  0: epoch 5000 with loss 2.71E-03
2022-06-01 22:09:17,881 | root |  INFO: Patch  0: epoch 5500 with loss 5.50E-04
2022-06-01 22:09:29,536 | root |  INFO: Patch  0: epoch 6000 with loss 9.02E-05
2022-06-01 22:09:41,324 | root |  INFO: Patch  0: epoch 6500 with loss 8.91E-05
2022-06-01 22:09:53,043 | root |  INFO: Patch  0: epoch 7000 with loss 5.31E-04
2022-06-01 22:10:04,825 | root |  INFO: Patch  0: epoch 7500 with loss 3.40E-04
2022-06-01 22:10:16,441 | root |  INFO: Patch  0: epoch 8000 with loss 4.98E-05
2022-06-01 22:10:28,269 | root |  INFO: Patch  0: epoch 8500 with loss 8.23E-05
2022-06-01 22:10:40,043 | root |  INFO: Patch  0: epoch 9000 with loss 3.88E-05
2022-06-01 22:10:51,605 | root |  INFO: Patch  0: epoch 9500 with loss 2.17E-05
2022-06-01 22:11:03,094 | root |  INFO: Patch  0: epoch 9999 with loss 5.00E-05
2022-06-01 22:11:03,123 | root |  INFO: Patch 0: training of u with 10000 epochs take 235.52300477027893 seconds.
2022-06-01 22:11:03,322 | matplotlib.colorbar |  DEBUG: locator: <matplotlib.ticker.AutoLocator object at 0x7f2af42a9df0>
2022-06-01 22:11:03,808 | matplotlib.colorbar |  DEBUG: locator: <matplotlib.ticker.AutoLocator object at 0x7f2af2fa5df0>
