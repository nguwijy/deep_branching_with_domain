2022-06-09 22:39:46,922 | root |  INFO: Logs are saved in /home/nguwijy/repo/deep_branching_with_domain/logs/20220609-223946-navier_stokes_stationary-T5-nu0.02
2022-06-09 22:39:46,925 | root |  DEBUG: Current configuration: {'training': True, '_parameters': OrderedDict(), '_buffers': OrderedDict(), '_non_persistent_buffers_set': set(), '_backward_hooks': OrderedDict(), '_is_full_backward_hook': None, '_forward_hooks': OrderedDict(), '_forward_pre_hooks': OrderedDict(), '_state_dict_hooks': OrderedDict(), '_load_state_dict_pre_hooks': OrderedDict(), '_modules': OrderedDict([('u_layer', ModuleList(
  (0): ModuleList(
    (0): Linear(in_features=3, out_features=50, bias=True)
    (1): Linear(in_features=50, out_features=50, bias=True)
    (2): Linear(in_features=50, out_features=50, bias=True)
    (3): Linear(in_features=50, out_features=50, bias=True)
    (4): Linear(in_features=50, out_features=50, bias=True)
    (5): Linear(in_features=50, out_features=50, bias=True)
    (6): Linear(in_features=50, out_features=50, bias=True)
    (7): Linear(in_features=50, out_features=2, bias=True)
  )
)), ('u_bn_layer', ModuleList(
  (0): ModuleList(
    (0): BatchNorm1d(3, eps=0.5, momentum=0.1, affine=False, track_running_stats=True)
    (1): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (7): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)), ('p_layer', ModuleList(
  (0): ModuleList(
    (0): Linear(in_features=2, out_features=50, bias=True)
    (1): Linear(in_features=50, out_features=50, bias=True)
    (2): Linear(in_features=50, out_features=50, bias=True)
    (3): Linear(in_features=50, out_features=50, bias=True)
    (4): Linear(in_features=50, out_features=50, bias=True)
    (5): Linear(in_features=50, out_features=50, bias=True)
    (6): Linear(in_features=50, out_features=50, bias=True)
    (7): Linear(in_features=50, out_features=1, bias=True)
  )
)), ('p_bn_layer', ModuleList(
  (0): ModuleList(
    (0): BatchNorm1d(2, eps=0.5, momentum=0.1, affine=False, track_running_stats=True)
    (1): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (7): BatchNorm1d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
)), ('loss', MSELoss()), ('activation', Softplus(beta=1, threshold=20))]), 'problem_name': 'navier_stokes_stationary', 'f_fun': <function f_example at 0x7f1002634f70>, 'phi_fun': <function phi_example at 0x7f1002634dc0>, 'phi0': 0, 'conditional_probability_to_survive': functools.partial(<function conditional_probability_to_survive at 0x7f10410434c0>, lower_bound=(-100, 0), upper_bound=(100, 1)), 'is_x_inside': functools.partial(<function is_x_inside at 0x7f1041043550>, lower_bound=(-100, 0), upper_bound=(100, 1)), 'conditional_probability_to_survive_for_p': <function Net.<lambda> at 0x7f104103b700>, 'is_x_inside_for_p': <function Net.<lambda> at 0x7f104103b820>, 'deriv_map': array([[1, 0],
       [0, 1],
       [0, 0],
       [0, 0],
       [1, 0],
       [0, 1],
       [1, 0],
       [0, 1]]), 'n': 8, 'dim_in': 2, 'zeta_map': array([-1, -1,  0,  1,  0,  0,  1,  1]), 'deriv_condition_deriv_map': array([[1, 0],
       [0, 1]]), 'deriv_condition_zeta_map': array([0, 1]), 'dim_out': 2, 'nprime': 2, 'exact_p_fun': <function p_example at 0x7f10027f7f70>, 'train_for_p': False, 'train_for_u': True, 'patches': 1, 'code': array([[-1, -1],
       [-1, -1]]), 'coordinate': array([0, 1]), 'fdb_lookup': {(1, 0): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 1), l_and_k={(1, 0): [0, 0, 0, 0, 0, 0, 0, 1]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 1, 0), l_and_k={(1, 0): [0, 0, 0, 0, 0, 0, 1, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 1, 0, 0), l_and_k={(1, 0): [0, 0, 0, 0, 0, 1, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 1, 0, 0, 0), l_and_k={(1, 0): [0, 0, 0, 0, 1, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 1, 0, 0, 0, 0), l_and_k={(1, 0): [0, 0, 0, 1, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 1, 0, 0, 0, 0, 0), l_and_k={(1, 0): [0, 0, 1, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 1, 0, 0, 0, 0, 0, 0), l_and_k={(1, 0): [0, 1, 0, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(1, 0, 0, 0, 0, 0, 0, 0), l_and_k={(1, 0): [1, 0, 0, 0, 0, 0, 0, 0]})], (0, 1): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 1), l_and_k={(0, 1): [0, 0, 0, 0, 0, 0, 0, 1]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 1, 0), l_and_k={(0, 1): [0, 0, 0, 0, 0, 0, 1, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 1, 0, 0), l_and_k={(0, 1): [0, 0, 0, 0, 0, 1, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 0, 1, 0, 0, 0), l_and_k={(0, 1): [0, 0, 0, 0, 1, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 0, 1, 0, 0, 0, 0), l_and_k={(0, 1): [0, 0, 0, 1, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 0, 1, 0, 0, 0, 0, 0), l_and_k={(0, 1): [0, 0, 1, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(0, 1, 0, 0, 0, 0, 0, 0), l_and_k={(0, 1): [0, 1, 0, 0, 0, 0, 0, 0]}), fdb(coeff=1, lamb=(1, 0, 0, 0, 0, 0, 0, 0), l_and_k={(0, 1): [1, 0, 0, 0, 0, 0, 0, 0]})], (0, 0): [fdb(coeff=1, lamb=(0, 0, 0, 0, 0, 0, 0, 0), l_and_k={})]}, 'fdb_runtime': 0.0232698917388916, 'mechanism_tot_len': 178, 'lr': 0.001, 'lr_milestones': [1000, 2000], 'lr_gamma': 0.8, 'weight_decay': 0, 'save_for_best_model': True, 'save_data': False, 'batch_normalization': True, 'nb_states': 10000, 'nb_states_per_batch': 1000, 'nb_path_per_state': 1000, 'x_lo': 0, 'x_hi': 1, 'adjusted_x_boundaries': (0.0, 1.0), 'overtrain_rate_for_p': 0.5, 't_lo': 0.0, 't_hi': 5, 'T': 5, 'tau_lo': 1e-05, 'tau_hi': 10, 'nu': 0.02, 'delta_t': 5.0, 'outlier_percentile': 1, 'outlier_multiplier': 10, 'exponential_lambda': 0.010258658877510115, 'bm_discretization_steps': 1, 'epochs': 10000, 'antithetic': True, 'div_condition_coeff': 1.0, 'poisson_coeff': 1.0, 'device': device(type='cuda'), 'verbose': True, 'fix_all_dim_except_first': False, 'fix_t_dim': True, 't_boundaries': tensor([5., 0.], device='cuda:0'), 'adjusted_t_boundaries': [(tensor(0., device='cuda:0'), tensor(0., device='cuda:0'))], 'working_dir': 'logs/20220609-223946-navier_stokes_stationary-T5-nu0.02', 'working_dir_full_path': '/home/nguwijy/repo/deep_branching_with_domain/logs/20220609-223946-navier_stokes_stationary-T5-nu0.02'}
2022-06-09 22:47:18,358 | root |  INFO: Patch 0: generation of u samples take 451.43211007118225 seconds.
2022-06-09 22:47:18,388 | root |  INFO: Patch  0: epoch    0 with loss 7.23E+00
2022-06-09 22:47:29,826 | root |  INFO: Patch  0: epoch  500 with loss 2.97E-03
2022-06-09 22:47:41,278 | root |  INFO: Patch  0: epoch 1000 with loss 3.63E-03
2022-06-09 22:47:52,838 | root |  INFO: Patch  0: epoch 1500 with loss 9.87E-03
2022-06-09 22:48:04,429 | root |  INFO: Patch  0: epoch 2000 with loss 8.43E-04
2022-06-09 22:48:16,387 | root |  INFO: Patch  0: epoch 2500 with loss 4.17E-03
2022-06-09 22:48:28,487 | root |  INFO: Patch  0: epoch 3000 with loss 4.76E-04
2022-06-09 22:48:39,512 | root |  INFO: Patch  0: epoch 3500 with loss 5.22E-04
2022-06-09 22:48:50,398 | root |  INFO: Patch  0: epoch 4000 with loss 1.02E-03
2022-06-09 22:49:01,267 | root |  INFO: Patch  0: epoch 4500 with loss 8.88E-04
2022-06-09 22:49:12,162 | root |  INFO: Patch  0: epoch 5000 with loss 1.60E-03
2022-06-09 22:49:23,053 | root |  INFO: Patch  0: epoch 5500 with loss 4.75E-03
2022-06-09 22:49:33,925 | root |  INFO: Patch  0: epoch 6000 with loss 3.04E-03
2022-06-09 22:49:44,798 | root |  INFO: Patch  0: epoch 6500 with loss 1.99E-03
2022-06-09 22:49:55,699 | root |  INFO: Patch  0: epoch 7000 with loss 1.06E-03
2022-06-09 22:50:06,563 | root |  INFO: Patch  0: epoch 7500 with loss 8.97E-03
2022-06-09 22:50:17,415 | root |  INFO: Patch  0: epoch 8000 with loss 5.94E-04
2022-06-09 22:50:28,262 | root |  INFO: Patch  0: epoch 8500 with loss 3.55E-03
2022-06-09 22:50:39,118 | root |  INFO: Patch  0: epoch 9000 with loss 1.67E-03
2022-06-09 22:50:49,964 | root |  INFO: Patch  0: epoch 9500 with loss 3.60E-04
2022-06-09 22:51:00,781 | root |  INFO: Patch  0: epoch 9999 with loss 5.01E-04
2022-06-09 22:51:00,810 | root |  INFO: Patch 0: training of u with 10000 epochs take 222.45204782485962 seconds.
2022-06-09 22:51:00,833 | matplotlib.colorbar |  DEBUG: locator: <matplotlib.ticker.AutoLocator object at 0x7f10025f3eb0>
2022-06-09 22:51:01,156 | matplotlib.colorbar |  DEBUG: locator: <matplotlib.ticker.AutoLocator object at 0x7f104100c820>
2022-06-09 22:51:01,379 | matplotlib.colorbar |  DEBUG: locator: <matplotlib.ticker.AutoLocator object at 0x7f10203a9e80>
